* {
  margin: 0;
  padding: 0;
}

.container {
  text-align: center;
}

.container div {
  padding: 15px;
  font-size: 32px;
  font-family: Helvetica;
  font-weight: bold;
  color: white;
}

.header {
  background-color: #393f4d;
}

.menu ul,
.menu li {
  font-size: 16px;
}

.sidebar {
  background-color: #FF7755;
}

.sidebar .photo {
  background-color: white;
  color: black;
  font-size: 12px;
  font-weight: normal;
  border-radius: 10px;
}


.sidebar .side-content {
  background-color: white;
  color: black;
  font-size: 16px;
  font-weight: normal;
}

.nav {
  background-color: #FF7755;
}

.nav ul li {
  font-size: 16px;
  text-transform: uppercase;
}

.article {
  background-color: #bccbde;
}

.article p {
  font-size: 18px;
  font-family: sans-serif;
  color: white;
  text-align: left;
}

.article .card {
  background-color: #FFFFFF;
  color: black;
  text-align: center;
}

.card p {
  color: black;
  font-weight: normal;
  font-size: 14px;
}

.card .title {
  font-size: 18px;
  text-align: center;
}

.footer {
  background-color: #393f4d;
}

.footer p {
  font-size: 13px;
  font-weight: normal;  
}

/* Begin my solution */
li {
  list-style: none;
}

.container {
  display: grid;
  grid-template-columns: 1fr 4fr;
  gap: 4px;
}

.header {
  display: grid;
  grid-column: 1 / -1;
  grid-template-columns: 1fr 2fr;
  align-items: center;
}

.logo {
  justify-self: flex-start;
}

.menu ul { /* Had to apply grid to ul, not menu. */
  display: grid;
  grid-template-columns: repeat(4, 1fr);
}

.sidebar {
  display: grid;
  grid-template-rows: repeat(4, 1fr);
  grid-row: 2 / 4;
  gap: 50px;
}

.nav ul {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}

/* auto-fit: returns highest int that doesn't overflow the grid, as it calculates in realtime; item scales to fit entire container, whereas auto-fill makes items stay at min size and preceding ones snap into place*/
.article {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 15px;
}

.card {
  height: 200px;
}

.footer {
  display: grid;

  grid-column: 1 / 3;
}

/* Place item in the middle vertically and horizontally */
.side-content, 
.photo {
  display: grid;
  align-items: center;
}